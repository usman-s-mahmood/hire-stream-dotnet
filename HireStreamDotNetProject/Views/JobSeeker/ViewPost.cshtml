@{
    ViewData["Controller"] = "JobSeeker";
    ViewData["Action"] = "ViewPost";
}
<div class="container-fluid" id="DisplayCards">
</div>
@await Html.PartialAsync("_Header", null, ViewData)

<div class="container-fluid">

    <div class="row p-3 border-dark">
        <div class="col-md-8">
            <div class="border p-3">
                <div class="card-body">
                    <p class="fs-1">Title: <strong>@ViewBag.Post.Title</strong></p>
                    <p class="fs-5">Location: <strong>@ViewBag.Post.Location</strong></p>
                    <p class="fs-5">Job Type: <strong>@ViewBag.Post.JobType</strong></p>
                    <p class="fs-5">Qualification: <strong>@ViewBag.Post.Qualification</strong></p>
                    <p class="fs-5">Department: <strong>@ViewBag.Post.JobCategory.Name</strong></p>
                    <p class="fs-5">Salary: <strong>@ViewBag.Post.Salary</strong></p>
                    <hr>
                    <p class="fs-4"><strong>Description</strong></p>
                    <div>
                        @Html.Raw(ViewBag.Post.Content)
                    </div>

                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="row">
                <form class="d-flex" role="search">
                    <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search" />
                    <button class="btn btn-success" type="submit">Search</button>
                </form>
            </div>
            <hr>
            <div class="row">
                <p class="fs-4 text-center"><strong>Recent Job Posts</strong></p>
                @foreach (var i in ViewBag.RecentPosts) {
                    <a href="/JobSeeker/ViewPost/@i.Id" class="nav-link">
                    <div class="card my-1">
                        <div class="card-body text-center">
                            <p class="fs-5 card-title">@i.Title</p>
                        </div>
                    </div>
                    </a>
                }
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        if (window.location.hash === "#DisplayCards") {
            const element = document.getElementById("DisplayCards");
            if (element) {
                setTimeout(() => {
                    element.scrollIntoView({ behavior: "smooth", block: "start" });
                }, 300); // Delay ensures the page is fully loaded before scrolling
            }
        }
    });
</script>